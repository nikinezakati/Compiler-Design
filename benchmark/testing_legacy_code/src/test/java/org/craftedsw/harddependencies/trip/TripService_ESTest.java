/*
 * This file was automatically generated by EvoSuite
 * Mon May 31 14:03:09 GMT 2021
 */

package org.craftedsw.harddependencies.trip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.craftedsw.harddependencies.trip.Trip;
import org.craftedsw.harddependencies.trip.TripService;
import org.craftedsw.harddependencies.user.User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TripService_ESTest extends TripService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TripService tripService0 = new TripService();
      User user0 = new User();
      User user1 = new User();
      user1.addFriend(user0);
      // Undeclared exception!
      try { 
        tripService0.getFriendTrips(user0, user1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TripDAO should not be invoked on an unit test.
         //
         verifyException("org.craftedsw.harddependencies.trip.TripDAO", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TripService tripService0 = new TripService();
      User user0 = new User();
      // Undeclared exception!
      try { 
        tripService0.getFriendTrips(user0, (User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.craftedsw.harddependencies.trip.TripService", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TripService tripService0 = new TripService();
      try { 
        tripService0.getFriendTrips((User) null, (User) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.craftedsw.harddependencies.trip.TripService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TripService tripService0 = new TripService();
      User user0 = new User();
      List<Trip> list0 = tripService0.getFriendTrips(user0, user0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TripService tripService0 = new TripService();
      // Undeclared exception!
      try { 
        tripService0.findTripsForFriend((User) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TripDAO should not be invoked on an unit test.
         //
         verifyException("org.craftedsw.harddependencies.trip.TripDAO", e);
      }
  }
}
