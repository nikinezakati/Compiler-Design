/*
 * This file was automatically generated by EvoSuite
 * Mon May 31 14:04:16 GMT 2021
 */

package org.craftedsw.harddependencies.user;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.craftedsw.harddependencies.trip.Trip;
import org.craftedsw.harddependencies.user.User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      boolean boolean0 = user0.isFriendsWith(user1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      user0.addFriend(user1);
      assertNotSame(user1, user0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      User user0 = new User();
      user0.addFriend(user0);
      List<User> list0 = user0.getFriends();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      User user0 = new User();
      Trip trip0 = new Trip();
      user0.addTrip(trip0);
      List<Trip> list0 = user0.trips();
      assertTrue(list0.contains(trip0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      User user0 = new User();
      List<Trip> list0 = user0.trips();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      User user0 = new User();
      List<User> list0 = user0.getFriends();
      assertFalse(list0.contains(user0));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      User user0 = new User();
      user0.addFriend(user0);
      boolean boolean0 = user0.isFriendsWith(user0);
      assertTrue(boolean0);
  }
}
